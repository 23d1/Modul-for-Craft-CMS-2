//
// Modul specific styles
//

@include media-breakpoint-down(md) {
  html {
    font-size: 14px;
  }
}

@keyframes link-hover {
		0% {
			transform: scaleX(1);
      transform-origin: 100% 0;
		}
    50% {
			transform: scaleX(0);
      transform-origin: 100% 0;
    }
		50.01% {
			transform: scaleX(0);
			transform-origin: 0 0;
    }
		100% {
			transform: scaleX(1);
      transform-origin: 0 0;
		}
}

$time: 0.6s;
$easing: cubic-bezier(.19,1,.22,1);

html {
	-webkit-font-smoothing: antialiased;
}

// input:focus, textarea:focus {
//     outline: none;
// }

.svg-defs {
    display: none
}
#block {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	z-index: 9998;
	background: $body-bg;
}
a.svg {
	position: relative;
	display: inline-block;
	vertical-align: middle;
	margin: 0 10px;
	.svg-icon {
		display: block;
		position: relative;
		width: 1.25rem;
		height: 1.25rem;
		z-index: 2;
		fill: $gray-dark;
		transition: transform $time $easing;
	}
	&:after {
		display: block;
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		content: '';
		border-radius: 50%;
		width: 200%;
		height: 200%;
		margin: -50% 0 0 -50%;
		background: $gray-dark;
		z-index: 1;
		opacity: 0;
		transform: scale3d(.5,.5,.5);
		transition: transform .4s $easing, opacity ($time / 2) $easing;
	}
	&:hover, &.hover {
		.svg-icon {
			fill: #fff;
			transform: scale3d(.9,.9,.9);
		}
		&:after {
			opacity: 1;
			transform: scale3d(1,1,1);
			transition: transform .75s $easing, opacity $time $easing;
		}
	}
}
#header {
	z-index: 9999;
	pointer-events: none;
  transition: transform $time $easing;
  a {
    pointer-events: auto;
  }
  &.is-small {
    top: -1rem;
  }
  &.is-hidden {
    transform: translate(0, -100%);
  }
}
#menu-slide, #header {
  a {
  	&:not(.link-active) {
  		display: inline-block;
  		&:after {
  			content: "";
  			display: block;
  			position: relative;
  	    height: 2px;
  			bottom: 2px;
  	    background: $link-color;
  	  	transform: scaleX(0);
  	    transform-origin: 0 0;
  	    transition: all $time $easing;
  		}
  		&:hover:not(.link-active):not(.hover):after {
  	    transform: scaleX(1);
  		}
  	}
  }
	a.link-active, .link-active a {
		display: inline-block;
		&:after {
			content: "";
			display: block;
			position: relative;
	    height: 2px;
			bottom: 2px;
	    background: $link-color;
	  	transform: scaleX(1) !important;
			transform-origin: 100% 0;
		}
	}
}
#menu-slide {
  pointer-events: auto;
  a.link-thick, .link-active a {
		&:after {
	    height: 3px;
			bottom: 3px;
		}
	}
}
#footer {
	a.svg {
    fill: #fff;
		.svg-icon {
			width: 2rem;
			height: 2rem;
			fill: #fff;
		}
		&:after {
			width: 150%;
			height: 150%;
			margin: -25% 0 0 -25%;
	    background: #fff;
		}
		&:hover, &.hover {
			.svg-icon {
				fill: $gray-dark;
			}
		}
	}
}


body {
	p {
		margin-bottom: ($spacer-y * 2);
		&:last-child {
			margin-bottom: 0;
		}
	}
	position: relative;
	a:not(.link-thick):not(.btn):not(.mejs-horizontal-volume-slider):not(.thumb) {
		display: inline-block;
		&:after {
			content: "";
			display: block;
			position: relative;
	    height: 1px;
			bottom: 3px;
	    background: $link-color;
	  	transform: scaleX(1);
	    transform-origin: 100% 0;
		}
	}
  a.thumb {
    color: #fff !important;
  	.thumb-hover {
  		display: flex;
  		position: absolute;
  		top: 0;
  		left: 0;
  		width: 100%;
  		height: 100%;
  		text-align: center;
  		align-items: center;
  		opacity: 0;
  		transition: all linear 0.2s;
  		.thumb-hover-title {
  			width: 100%;
  			z-index: 1;
  		}
  		.thumb-hover-bg {
  			position: absolute;
  			top: 0;
  			left: 0;
  			width: 100%;
  			height: 100%;
  			background: $gray-dark;
  			opacity: 0.8;
  		}
  	}
  	&:hover, &.hover {
      .thumb-hover {
    		//z-index: 1;
    		opacity: 1;
    		.thumb-hover-title {
    			color: #fff;
    		}
    	}
    }
  }
  .link-thick, #menu-btn {
  	display: inline-block;
  }
	.svg-icon {
		display: block;
    position: relative;
    width: 20px;
    height: 20px;
    z-index: 2;
	}
}
body.desktop {
	a:not(.link-thick):not(.btn):not(.mejs-horizontal-volume-slider):not(.thumb) {
		&:hover:after {
	    -webkit-animation: 'link-hover' $time $easing 0s;
	    animation: 'link-hover' $time $easing 0s;
		}
	}
  .link-thick, #menu-btn {
  	display: inline-block;
    &:after {
  		content: "";
  		display: block;
  		position: relative;
      height: 2px;
  		bottom: 2px;
      background: $link-color;
    	transform: scaleX(0);
  		transform-origin: 0 0;
      transition: all $time $easing;
  	}
  	&:hover:after, &.hover:after {
      transform: scaleX(1);
      -webkit-animation: transform $time $easing 0s;
      animation: transform $time $easing 0s;
  	}
  }
}
body.mobile {
  .next-prev {
    .link-thick {
      &:after {
        content: "";
    		display: block;
    		position: relative;
        height: 2px;
    		bottom: 2px;
        background: $link-color;
      	transform: scaleX(0);
    		transform-origin: 0 0;
        transform: scaleX(1);
      }
    }
  }
}

.pull-top {
  position: relative;
	top: -($grid-gutter-width-base / 2);
}
.structure {
  .pull-top {
  	top: 0;
  }
  > .pt-3 {
    padding-top: 0 !important;
  }
}
.pull-up-bottom-row {
	margin-bottom: -$grid-gutter-width-base !important;
}
.pull-up-bottom-bg {
	margin-bottom: -($grid-gutter-width-base / 2) !important;
}

.row.form-group {
	@for $i from 1 through $grid-columns {
		.col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i} {
			padding-top: 0;
	    padding-bottom: 0;
		}
	}
}

// Check background
.background--light {
  color: black !important;
  &:after {
    background: black !important;
  }
  .menu-icon-inner {
    background: black;
  }
}
.background--dark {
  color: white !important;
  &:after {
    background: white !important;
  }
  .menu-icon-inner {
    background: white;
  }
}
.background--complex {
  color: gray !important;
  &:after {
    background: gray !important;
  }
  .menu-icon-inner {
    background: gray;
  }
}


/**
 * Container
 */
#menu-slide {
  .container-fluid {
    width: 100%;
  }
}

.container-bg {
	padding: ($grid-gutter-width-base / 2);
	margin: ($grid-gutter-width-base / 2);
}

@include media-breakpoint-down(md) {
	.container, .container-fluid {
		padding-left: $grid-gutter-width-base !important;
		padding-right: $grid-gutter-width-base !important;
	}
}
@include media-breakpoint-down(sm) {
	.container, .container-fluid {
		padding-left: ($grid-gutter-width-base / 2) !important;
		padding-right: ($grid-gutter-width-base / 2) !important;
	}
}


/**
 * 404
 */
 .cube-404 {
  width: 16rem;
  height: 16rem;
  line-height: 16rem;
  text-align: center;
  font-size: 8rem;
  transform-style: preserve-3d;
  transition: transform 0.5s 0.1s;
  perspective: 99999px;
  color: #333;
  margin: -8rem 0 0 -8rem;
  position: fixed;
  top: 50%;
  left: 50%;
  opacity: 1;
  &.panelLoad {
    z-index: 11;
    top: 50%;
    margin-top: -8rem;
    animation: panel 20s 1s infinite forwards;
    .cube-face {
      color: black;
      box-shadow: inset 0 0 0 2px #000, 0 0 1px 1px #000;
    }
  }
  .cube-face {
    width: inherit;
    height: inherit;
    position: absolute;
    background: rgba(255,255,255,0.75);
    box-shadow: inset 0 0 0 2px #222, 0 0 1px 1px #222;
    opacity: 1;
  }
  .cube-face-front {
    transform: translate3d(0, 0, 8rem);
    font-size: 3rem;
    line-height: 5.333333rem;
  }
  .cube-face-back {
    transform: rotateY(180deg) translate3d(0, 0, 8rem);
  }
  .cube-face-left {
    transform: rotateY(-90deg) translate3d(0, 0, 8rem);
  }
  .cube-face-right {
    transform: rotateY(90deg) translate3d(0, 0, 8rem);
  }
  .cube-face-top {
    transform: rotateX(90deg) translate3d(0, 0, 8rem);
  }
  .cube-face-bottom {
    transform: rotateX(-90deg) translate3d(0, 0, 8rem);
  }
}
@keyframes panel {
  0% {
    transform: rotateY(0deg) rotateZ(0deg);
  }
  20% {
   transform: rotateY(90deg) rotateZ(0deg);
  }
  40% {
   transform: rotateX(45deg) rotateZ(45deg);
  }
  60% {
   transform: rotateX(90deg) rotateY(180deg) rotateX(90deg);
  }
  80% {
   transform: rotateX(310deg) rotateZ(230deg)
  }
  100% {
   transform: rotateX(360deg) rotateZ(360deg)
  }
}
